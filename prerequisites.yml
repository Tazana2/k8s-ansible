---
- name: Install Docker and Kubernetes following official documentation
  hosts: all
  become: yes
  tasks:
    - name: Update apt package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install Docker from Ubuntu repositories
      apt:
        name:
          - docker.io
          - docker-compose
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Install required packages for Kubernetes repository
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: Create /etc/apt/keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download and add Kubernetes GPG key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      shell: |
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list

    - name: Update apt cache with Kubernetes repository
      apt:
        update_cache: yes

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold Kubernetes packages at current version
      command: apt-mark hold kubelet kubeadm kubectl

    - name: Enable kubelet service
      systemd:
        name: kubelet
        enabled: yes
        state: started

    - name: Disable swap
      command: swapoff -a
      ignore_errors: yes

    - name: Comment swap in /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '^(.*swap.*)$'
        replace: '# \1'

    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      with_items:
        - br_netfilter
        - overlay

    - name: Configure sysctl params for Kubernetes
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      with_dict:
        net.bridge.bridge-nf-call-iptables: 1
        net.bridge.bridge-nf-call-ip6tables: 1
        net.ipv4.ip_forward: 1

    - name: Ensure sysctl settings persist after reboot
      copy:
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        content: |
          net.bridge.bridge-nf-call-iptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1
        mode: '0644'

- name: Verify installation
  hosts: all
  become: yes
  tasks:
    - name: Check Docker version
      command: docker --version
      register: docker_version
      changed_when: false

    - name: Display Docker version
      debug:
        var: docker_version.stdout

    - name: Check kubeadm version
      command: kubeadm version
      register: kubeadm_version
      changed_when: false

    - name: Display kubeadm version
      debug:
        var: kubeadm_version.stdout

    - name: Check kubelet status
      systemd:
        name: kubelet
      register: kubelet_status

    - name: Display kubelet status
      debug:
        var: kubelet_status.status

    - name: Test Docker with hello-world
      command: docker run hello-world
      ignore_errors: yes
      register: docker_test
      changed_when: false

    - name: Display Docker test result
      debug:
        var: docker_test.stdout